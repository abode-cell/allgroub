'use server';
/**
 * @fileOverview An AI flow to generate a daily summary for the dashboard.
 *
 * - generateDailySummary - A function that generates a summary of the day's financial activities.
 * - GenerateDailySummaryInput - The input type for the generateDailySummary function.
 * - GenerateDailySummaryOutput - The return type for the generateDailySummary function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateDailySummaryInputSchema = z.object({
  userName: z.string().optional().describe('The name of the user requesting the summary.'),
  userRole: z.string().optional().describe('The role of the user.'),

  // Fields for Office Manager
  officeManagerTotalBorrowers: z.number().optional().describe("The total number of borrowers managed by this office."),
  officeManagerTotalInvestors: z.number().optional().describe("The total number of investors managed by this office."),
  officeManagerTotalLoansGranted: z.number().optional().describe("The total amount of all loans granted by this office."),
  officeManagerTotalInvestments: z.number().optional().describe("The total amount of all investments received by this office."),
  officeManagerPendingRequestsCount: z.number().optional().describe('The number of pending requests that need review by the office manager.'),
  officeManagerDefaultedLoansCount: z.number().optional().describe('Number of loans that defaulted in the office manager\'s portfolio.'),
  officeManagerTotalNetProfit: z.number().optional().describe('Total net profit generated by the office manager.'),
  officeManagerIdleCapital: z.number().optional().describe('Total idle capital available for investment in the office manager\'s portfolio.'),
  officeManagerActiveCapital: z.number().optional().describe('Total capital currently active in loans in the office manager\'s portfolio.'),
  
  // Fields for System Admin
  adminTotalUsersCount: z.number().optional().describe('The total number of users in the system.'),
  adminActiveManagersCount: z.number().optional().describe('The number of active office managers.'),
  adminPendingActivationsCount: z.number().optional().describe('The number of office managers pending activation.'),
  adminTotalCapitalInSystem: z.number().optional().describe('The total capital across all investors in the system.'),
  adminTotalActiveLoansCount: z.number().optional().describe('The total number of active loans in the system.'),
  adminNewSupportTicketsCount: z.number().optional().describe('The number of new unread support tickets.'),
});
export type GenerateDailySummaryInput = z.infer<typeof GenerateDailySummaryInputSchema>;

const GenerateDailySummaryOutputSchema = z.object({
  summary: z.string().describe('ملخص يومي مفصل ومنسق بصيغة ماركداون باللغة العربية. استخدم العناوين والنقاط (*) والعلامات (**) لتغميق النص.'),
});
export type GenerateDailySummaryOutput = z.infer<typeof GenerateDailySummaryOutputSchema>;

export async function generateDailySummary(
  input: GenerateDailySummaryInput
): Promise<GenerateDailySummaryOutput> {
  return generateDailySummaryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateDailySummaryPrompt',
  model: 'googleai/gemini-2.0-flash',
  input: {schema: GenerateDailySummaryInputSchema},
  output: {schema: GenerateDailySummaryOutputSchema},
  prompt: `أنت مساعد ذكاء اصطناعي لـ {{userName}}. دوره هو {{userRole}}.
مهمتك هي إنشاء ملخص يومي مفصل ومنظم باللغة العربية، باستخدام صيغة ماركداون.
استخدم العناوين والنقاط (*) لتوضيح الأرقام والأنشطة الأكثر أهمية. لا تضف أي عبارات ترحيبية أو ختامية.

{{#if adminTotalUsersCount}}
أنت تتحدث إلى مدير النظام. قدم ملخصًا إداريًا شاملاً عن صحة المنصة وأدائها.

**نظرة عامة على النظام**
* **إجمالي المستخدمين:** **{{{adminTotalUsersCount}}}** مستخدم
* **مدراء المكاتب النشطون:** **{{{adminActiveManagersCount}}}** مدير
* **الحسابات التي تنتظر التفعيل:** **{{{adminPendingActivationsCount}}}** طلب

**النشاط المالي**
* **إجمالي رأس المال في النظام:** **{{{adminTotalCapitalInSystem}}}** ريال
* **إجمالي القروض النشطة:** **{{{adminTotalActiveLoansCount}}}** قرض

**الدعم الفني**
* **طلبات الدعم الجديدة:** **{{{adminNewSupportTicketsCount}}}** طلب

{{else}}
أنت تتحدث إلى مدير مكتب. قدم ملخصًا مفصلاً عن الأداء المالي والتشغيلي لمكتبه.

**نظرة عامة على النشاط**
* **إجمالي المقترضين:** **{{{officeManagerTotalBorrowers}}}** مقترض
* **إجمالي المستثمرين:** **{{{officeManagerTotalInvestors}}}** مستثمر
* **إجمالي مبالغ القروض:** **{{{officeManagerTotalLoansGranted}}}** ريال
* **إجمالي مبالغ الاستثمارات:** **{{{officeManagerTotalInvestments}}}** ريال
* **الطلبات المعلقة للمراجعة:** **{{{officeManagerPendingRequestsCount}}}** طلب

**أداء المحفظة**
* **الأرباح الصافية:** **{{{officeManagerTotalNetProfit}}}** ريال
* **القروض المتعثرة:** **{{{officeManagerDefaultedLoansCount}}}** قرض
* **رأس المال النشط:** **{{{officeManagerActiveCapital}}}** ريال
* **رأس المال الخامل:** **{{{officeManagerIdleCapital}}}** ريال
{{/if}}
`,
});

const generateDailySummaryFlow = ai.defineFlow(
  {
    name: 'generateDailySummaryFlow',
    inputSchema: GenerateDailySummaryInputSchema,
    outputSchema: GenerateDailySummaryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    if (!output) {
      // This should be caught by the client and displayed as a proper error.
      // Returning an object with an empty string is safer than crashing.
      return { summary: '' };
    }
    return output;
  }
);
